{"version":3,"sources":["../../../source/services/ipns/IPNSFirebase.js"],"names":["admin","require","IPNSFirebase","initializeApp","credential","applicationDefault","databaseURL","ipnsName","cid","db","firestore","docRef","collection","doc","writeResult","set","writeTime","toDate","toISOString","get","exists","console","log","undefined","data"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAArB;;IAEMC,Y;;;;;;gBAAAA,Y,aACa,YAAM;AACrBF,EAAAA,KAAK,CAACG,aAAN,CAAoB;AAClBC,IAAAA,UAAU,EAAEJ,KAAK,CAACI,UAAN,CAAiBC,kBAAjB,EADM;AAElBC,IAAAA,WAAW,EAAE;AAFK,GAApB;AAID,C;;gBANGJ,Y;gCAQmB,iBAGjB;AAAA,QAFJK,QAEI,QAFJA,QAEI;AAAA,QADJC,GACI,QADJA,GACI;AACJ,QAAMC,EAAE,GAAGT,KAAK,CAACU,SAAN,EAAX;AAEA,QAAMC,MAAM,GAAGF,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBC,GAAtB,CAA0BN,QAA1B,CAAf;AACA,QAAMO,WAAW,SAASH,MAAM,CAACI,GAAP,CAAW;AACnCP,MAAAA,GAAG,EAAHA;AADmC,KAAX,CAA1B;AAGA,WAAOM,WAAW,CAACE,SAAZ,CAAsBC,MAAtB,GAA+BC,WAA/B,EAAP;AACD,G;;;;;;;gBAnBGhB,Y;gCAqBuB,kBAErB;AAAA,QADJK,QACI,SADJA,QACI;AACJ,QAAME,EAAE,GAAGT,KAAK,CAACU,SAAN,EAAX;AAEA,QAAMC,MAAM,GAAGF,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBC,GAAtB,CAA0BN,QAA1B,CAAf;AACA,QAAMM,GAAG,SAASF,MAAM,CAACQ,GAAP,EAAlB;;AACA,QAAI,CAACN,GAAG,CAACO,MAAT,EAAiB;AACfC,MAAAA,OAAO,CAACC,GAAR,gCAAoCf,QAApC;AACA,aAAOgB,SAAP;AACD;;AACD,QAAMf,GAAG,GAAGK,GAAG,CAACW,IAAJ,GAAWhB,GAAvB;AACA,WAAO;AAAED,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,GAAG,EAAHA;AAAZ,KAAP;AACD,G;;;;;;;gBAlCGN,Y;gCAoCsB,kBAEpB;AAAA,QADJK,QACI,SADJA,QACI;AACJ,QAAME,EAAE,GAAGT,KAAK,CAACU,SAAN,EAAX;AAEA,QAAMC,MAAM,GAAGF,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBC,GAAtB,CAA0BN,QAA1B,CAAf;AACA,QAAMM,GAAG,SAASF,MAAM,CAACQ,GAAP,EAAlB;;AACA,QAAI,CAACN,GAAG,CAACO,MAAT,EAAiB;AACfC,MAAAA,OAAO,CAACC,GAAR,gCAAoCf,QAApC;AACA;AACD;;AACD,UAAMI,MAAM,UAAN,EAAN;AACD,G","sourcesContent":["// for some reason this does not work!\n// import * as admin from 'firebase-admin'\n\nconst admin = require('firebase-admin')\n\nclass IPNSFirebase {\n  static connect = () => {\n    admin.initializeApp({\n      credential: admin.credential.applicationDefault(),\n      databaseURL: 'https://idbox-52fa6.firebaseio.com'\n    })\n  }\n\n  static setIPNSRecord = async ({\n    ipnsName,\n    cid\n  }) => {\n    const db = admin.firestore()\n\n    const docRef = db.collection('ipns').doc(ipnsName)\n    const writeResult = await docRef.set({\n      cid\n    })\n    return writeResult.writeTime.toDate().toISOString()\n  }\n\n  static getCIDForIPNSName = async ({\n    ipnsName\n  }) => {\n    const db = admin.firestore()\n\n    const docRef = db.collection('ipns').doc(ipnsName)\n    const doc = await docRef.get()\n    if (!doc.exists) {\n      console.log(`No CID for IPNS name ${ipnsName}`)\n      return undefined\n    }\n    const cid = doc.data().cid\n    return { ipnsName, cid }\n  }\n\n  static deleteIPNSRecord = async ({\n    ipnsName\n  }) => {\n    const db = admin.firestore()\n\n    const docRef = db.collection('ipns').doc(ipnsName)\n    const doc = await docRef.get()\n    if (!doc.exists) {\n      console.log(`No CID for IPNS name ${ipnsName}`)\n      return\n    }\n    await docRef.delete()\n  }\n}\n\nexport { IPNSFirebase }\n"],"file":"IPNSFirebase.js"}