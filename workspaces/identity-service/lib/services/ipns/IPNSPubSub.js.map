{"version":3,"sources":["../../../source/services/ipns/IPNSPubSub.js"],"names":["IPNSPubSub","request","serviceProxy","ServiceProxy","response","send","ipnsName","cid","method","params","sendCommandToNameService"],"mappings":";;;;;;;AAAA;;;;;;;;;;IAEMA,U;;;;;;gBAAAA,U;+BAC8B,WAAMC,OAAN,EAAiB;AACjD,QAAMC,YAAY,GAAG,IAAIC,mBAAJ,CAAiB,0BAAjB,CAArB;AAEA,QAAMC,QAAQ,SAASF,YAAY,CAACG,IAAb,CAAkBJ,OAAlB,CAAvB;AACA,WAAOG,QAAQ,CAACA,QAAhB;AACD,G;;;;;;;gBANGJ,U,aAQa,YAAM,CACtB,C;;gBATGA,U;gCAWmB,kBAGjB;AAAA,QAFJM,QAEI,SAFJA,QAEI;AAAA,QADJC,GACI,SADJA,GACI;AACJ,QAAMN,OAAO,GAAG;AACdO,MAAAA,MAAM,EAAE,cADM;AAEdC,MAAAA,MAAM,EAAE,CACN;AACEH,QAAAA,QAAQ,EAARA,QADF;AAEEC,QAAAA,GAAG,EAAHA;AAFF,OADM;AAFM,KAAhB;AASA,WAAOP,UAAU,CAACU,wBAAX,CAAoCT,OAApC,CAAP;AACD,G;;;;;;;gBAzBGD,U;gCA2BuB,kBAErB;AAAA,QADJM,QACI,SADJA,QACI;AACJ,QAAML,OAAO,GAAG;AACdO,MAAAA,MAAM,EAAE,cADM;AAEdC,MAAAA,MAAM,EAAE,CAAC;AAAEH,QAAAA,QAAQ,EAARA;AAAF,OAAD;AAFM,KAAhB;AAIA,WAAON,UAAU,CAACU,wBAAX,CAAoCT,OAApC,CAAP;AACD,G;;;;;;;gBAnCGD,U;gCAqCsB,kBAEpB;AAAA,QADJM,QACI,SADJA,QACI;AACJ,QAAML,OAAO,GAAG;AACdO,MAAAA,MAAM,EAAE,gBADM;AAEdC,MAAAA,MAAM,EAAE,CAAC;AAAEH,QAAAA,QAAQ,EAARA;AAAF,OAAD;AAFM,KAAhB;AAIA,WAAON,UAAU,CAACU,wBAAX,CAAoCT,OAApC,CAAP;AACD,G","sourcesContent":["import { ServiceProxy } from '@identity-box/utils'\n\nclass IPNSPubSub {\n  static sendCommandToNameService = async request => {\n    const serviceProxy = new ServiceProxy('identity-box.nameservice')\n\n    const response = await serviceProxy.send(request)\n    return response.response\n  }\n\n  static connect = () => {\n  }\n\n  static setIPNSRecord = async ({\n    ipnsName,\n    cid\n  }) => {\n    const request = {\n      method: 'publish-name',\n      params: [\n        {\n          ipnsName,\n          cid\n        }\n      ]\n    }\n    return IPNSPubSub.sendCommandToNameService(request)\n  }\n\n  static getCIDForIPNSName = async ({\n    ipnsName\n  }) => {\n    const request = {\n      method: 'resolve-name',\n      params: [{ ipnsName }]\n    }\n    return IPNSPubSub.sendCommandToNameService(request)\n  }\n\n  static deleteIPNSRecord = async ({\n    ipnsName\n  }) => {\n    const request = {\n      method: 'unpublish-name',\n      params: [{ ipnsName }]\n    }\n    return IPNSPubSub.sendCommandToNameService(request)\n  }\n}\n\nexport { IPNSPubSub }\n"],"file":"IPNSPubSub.js"}